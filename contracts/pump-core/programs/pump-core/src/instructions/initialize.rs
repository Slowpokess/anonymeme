/*!
üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã Anonymeme
Production-ready –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–≤–∏—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
*/

use anchor_lang::prelude::*;
use crate::state::*;
use crate::errors::ErrorCode;

/// –ö–æ–Ω—Ç–µ–∫—Å—Ç—ã –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
#[derive(Accounts)]
pub struct InitializePlatform<'info> {
    /// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã (PDA)
    #[account(
        init,
        payer = admin,
        space = PlatformConfig::ACCOUNT_SIZE,
        seeds = [PlatformConfig::SEED.as_bytes()],
        bump
    )]
    pub platform_config: Account<'info, PlatformConfig>,

    /// –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã (–ø–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é)
    #[account(mut)]
    pub admin: Signer<'info>,

    /// –ö–∞–∑–Ω–∞—á–µ–π—Å—Ç–≤–æ –¥–ª—è —Å–±–æ—Ä–∞ –∫–æ–º–∏—Å—Å–∏–π
    /// CHECK: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –≤ –ª–æ–≥–∏–∫–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    pub treasury: AccountInfo<'info>,

    /// –°–∏—Å—Ç–µ–º–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ Solana
    pub system_program: Program<'info, System>,
    
    /// Sysvar –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞—Ä–µ–Ω–¥—ã
    pub rent: Sysvar<'info, Rent>,
}

/// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã —Å –ø–æ–ª–Ω–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é
pub fn initialize_platform(
    ctx: Context<InitializePlatform>,
    fee_rate: u16, // –í –±–∞–∑–∏—Å–Ω—ã—Ö –ø—É–Ω–∫—Ç–∞—Ö (10000 = 100%)
    treasury: Pubkey,
    security_params: SecurityParams,
) -> Result<()> {
    msg!("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã Anonymeme...");

    // === –í–ê–õ–ò–î–ê–¶–ò–Ø –í–•–û–î–ù–´–• –ü–ê–†–ê–ú–ï–¢–†–û–í ===
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ fee_rate (–º–∞–∫—Å–∏–º—É–º 10% = 1000 –±–∞–∑–∏—Å–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤)
    require!(fee_rate <= 1000, ErrorCode::InvalidFeeRate);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ treasury (–Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω—É–ª–µ–≤—ã–º)
    require!(treasury != Pubkey::default(), ErrorCode::InvalidTreasury);
    require!(treasury != ctx.accounts.admin.key(), ErrorCode::TreasurySameAsAdmin);
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    validate_security_params(&security_params)?;
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ rent exemption
    let rent = &ctx.accounts.rent;
    let platform_config_lamports = ctx.accounts.platform_config.to_account_info().lamports();
    require!(
        rent.is_exempt(platform_config_lamports, PlatformConfig::ACCOUNT_SIZE),
        ErrorCode::InsufficientRentExemption
    );

    // === –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ü–õ–ê–¢–§–û–†–ú–´ ===
    
    let platform_config = &mut ctx.accounts.platform_config;
    let clock = Clock::get()?;

    // –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    platform_config.admin = ctx.accounts.admin.key();
    platform_config.treasury = treasury;
    platform_config.fee_rate = fee_rate;
    platform_config.emergency_paused = false;
    platform_config.trading_paused = false;
    platform_config.bump = ctx.bumps.platform_config;

    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
    platform_config.total_tokens_created = 0;
    platform_config.total_volume_sol = 0;
    platform_config.total_fees_collected = 0;
    platform_config.total_trades = 0;

    // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–æ–∫–µ–Ω–æ–≤
    platform_config.graduation_fee = 1_000_000_000; // 1 SOL
    platform_config.min_initial_liquidity = 100_000_000; // 0.1 SOL
    platform_config.max_initial_supply = 1_000_000_000_000; // 1T —Ç–æ–∫–µ–Ω–æ–≤
    platform_config.min_token_name_length = 3;
    platform_config.max_token_name_length = 32;

    // –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    platform_config.initialized_at = clock.unix_timestamp;
    platform_config.last_updated = clock.unix_timestamp;
    platform_config.platform_version = 1;

    // –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
    platform_config.security_params = security_params;
    platform_config.emergency_contacts = [Pubkey::default(); 3];
    
    // Reentrancy protection
    platform_config.reentrancy_guard = false;

    // === –°–û–ë–´–¢–ò–Ø ===
    
    emit!(PlatformInitializedEvent {
        admin: ctx.accounts.admin.key(),
        treasury,
        fee_rate,
        timestamp: clock.unix_timestamp,
        platform_version: 1,
    });

    msg!("‚úÖ –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!");
    msg!("   –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {}", ctx.accounts.admin.key());
    msg!("   –ö–∞–∑–Ω–∞—á–µ–π—Å—Ç–≤–æ: {}", treasury);
    msg!("   –ö–æ–º–∏—Å—Å–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã: {}%", fee_rate as f64 / 100.0);
    msg!("   –í—Ä–µ–º—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {}", clock.unix_timestamp);

    Ok(())
}

/// –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
fn validate_security_params(params: &SecurityParams) -> Result<()> {
    // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Å–¥–µ–ª–∫–∏ (–Ω–µ –±–æ–ª–µ–µ 1000 SOL)
    require!(
        params.max_trade_size_sol > 0 && params.max_trade_size_sol <= 1000_000_000_000,
        ErrorCode::InvalidMaxTradeSize
    );

    // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π slippage (–Ω–µ –±–æ–ª–µ–µ 50% = 5000 –±–∞–∑–∏—Å–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤)
    require!(
        params.max_slippage_bps <= 5000,
        ErrorCode::InvalidMaxSlippage
    );

    // –ù–∞–ª–æ–≥ –Ω–∞ –∫–∏—Ç–æ–≤ (–Ω–µ –±–æ–ª–µ–µ 20% = 2000 –±–∞–∑–∏—Å–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤)
    require!(
        params.whale_tax_bps <= 2000,
        ErrorCode::InvalidWhaleTax
    );

    // –ü–æ—Ä–æ–≥–∏ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–∏—Ç–æ–≤
    require!(
        params.whale_threshold_sol > 0 && params.whale_threshold_sol <= 100_000_000_000,
        ErrorCode::InvalidWhaleThreshold
    );

    // Rate limiting (–º–∏–Ω–∏–º—É–º 1 —Å–¥–µ–ª–∫–∞ –≤ —Å–µ–∫—É–Ω–¥—É, –º–∞–∫—Å–∏–º—É–º 1000)
    require!(
        params.rate_limit_per_minute >= 1 && params.rate_limit_per_minute <= 1000,
        ErrorCode::InvalidRateLimit
    );

    // Cooldown –ø–µ—Ä–∏–æ–¥ (–º–∞–∫—Å–∏–º—É–º 1 —á–∞—Å = 3600 —Å–µ–∫—É–Ω–¥)
    require!(
        params.cooldown_period_seconds <= 3600,
        ErrorCode::InvalidCooldownPeriod
    );

    Ok(())
}

/// –°–æ–±—ã—Ç–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
#[event]
pub struct PlatformInitializedEvent {
    /// –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
    pub admin: Pubkey,
    /// –ê–¥—Ä–µ—Å –∫–∞–∑–Ω–∞—á–µ–π—Å—Ç–≤–∞
    pub treasury: Pubkey,
    /// –ö–æ–º–∏—Å—Å–∏—è –≤ –±–∞–∑–∏—Å–Ω—ã—Ö –ø—É–Ω–∫—Ç–∞—Ö
    pub fee_rate: u16,
    /// –í—Ä–µ–º—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    pub timestamp: i64,
    /// –í–µ—Ä—Å–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
    pub platform_version: u8,
}
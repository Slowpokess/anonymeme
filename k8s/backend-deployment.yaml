# üöÄ Backend Deployment –¥–ª—è Kubernetes
apiVersion: apps/v1
kind: Deployment
metadata:
  name: anonymeme-backend
  namespace: anonymeme
  labels:
    app: anonymeme-backend
    component: api
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: anonymeme-backend
  template:
    metadata:
      labels:
        app: anonymeme-backend
        component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: anonymeme-backend
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: backend
        image: ghcr.io/anonymeme/backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: anonymeme-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: anonymeme-secrets
              key: redis-url
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: anonymeme-secrets
              key: secret-key
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: anonymeme-secrets
              key: jwt-secret-key
        - name: SOLANA_RPC_URL
          valueFrom:
            configMapKeyRef:
              name: anonymeme-config
              key: solana-rpc-url
        - name: CONTRACT_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: anonymeme-config
              key: contract-address
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "warning"
        - name: PROMETHEUS_METRICS
          value: "true"
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi" 
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: uploads
          mountPath: /app/uploads
        - name: keypairs
          mountPath: /app/keypairs
          readOnly: true
      volumes:
      - name: logs
        emptyDir: {}
      - name: uploads
        persistentVolumeClaim:
          claimName: anonymeme-uploads
      - name: keypairs
        secret:
          secretName: anonymeme-keypairs
          defaultMode: 0600
      imagePullSecrets:
      - name: ghcr-secret
---
apiVersion: v1
kind: Service
metadata:
  name: anonymeme-backend-service
  namespace: anonymeme
  labels:
    app: anonymeme-backend
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: anonymeme-backend
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: anonymeme-backend
  namespace: anonymeme
  labels:
    app: anonymeme-backend
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: anonymeme-backend-hpa
  namespace: anonymeme
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: anonymeme-backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
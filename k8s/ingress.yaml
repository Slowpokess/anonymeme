# üåê Ingress Configuration –¥–ª—è Anonymeme Platform
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: anonymeme-ingress
  namespace: anonymeme
  labels:
    app: anonymeme
  annotations:
    # Nginx Ingress Controller
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Rate Limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # CORS Configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://anonymeme.io"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Authorization, Content-Type, X-Requested-With"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    
    # Security Headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header Referrer-Policy "no-referrer-when-downgrade" always;
      add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # SSL Certificate
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
    # Connection settings
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    
    # Caching
    nginx.ingress.kubernetes.io/server-snippet: |
      location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
      }
spec:
  tls:
  - hosts:
    - anonymeme.io
    - www.anonymeme.io
    - api.anonymeme.io
    - ws.anonymeme.io
    secretName: anonymeme-tls
  rules:
  # Main Frontend
  - host: anonymeme.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: anonymeme-frontend-service
            port:
              number: 3000
  
  # WWW redirect
  - host: www.anonymeme.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: anonymeme-frontend-service
            port:
              number: 3000
  
  # API Backend
  - host: api.anonymeme.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: anonymeme-backend-service
            port:
              number: 8000
  
  # WebSocket Service
  - host: ws.anonymeme.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: anonymeme-websocket-service
            port:
              number: 8001
---
# API-specific Ingress with different rate limiting
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: anonymeme-api-ingress
  namespace: anonymeme
  labels:
    app: anonymeme-api
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    
    # Stricter rate limiting for API
    nginx.ingress.kubernetes.io/rate-limit: "200"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-status-code: "429"
    
    # Authentication rate limiting
    nginx.ingress.kubernetes.io/server-snippet: |
      location /api/v1/auth/ {
        limit_req zone=auth burst=5 nodelay;
      }
    
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - anonymeme.io
    secretName: anonymeme-tls
  rules:
  - host: anonymeme.io
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: anonymeme-backend-service
            port:
              number: 8000
---
# ClusterIssuer –¥–ª—è Let's Encrypt
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: admin@anonymeme.io
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: nginx
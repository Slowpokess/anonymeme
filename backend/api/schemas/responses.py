#!/usr/bin/env python3
"""
üì§ Pydantic —Å—Ö–µ–º—ã –¥–ª—è –∏—Å—Ö–æ–¥—è—â–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤ API
Production-ready —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
"""

from typing import Optional, List, Dict, Any, Union
from decimal import Decimal
from datetime import datetime
from pydantic import BaseModel, Field, ConfigDict
from uuid import UUID

# –ò–º–ø–æ—Ä—Ç enum'–æ–≤ –∏–∑ –º–æ–¥–µ–ª–µ–π
from ..models.database import CurveType, DexType, TokenStatus, TradeType, UserRole, UserStatus


class BaseResponse(BaseModel):
    """–ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≤—Å–µ—Ö –æ—Ç–≤–µ—Ç–æ–≤"""
    model_config = ConfigDict(from_attributes=True, arbitrary_types_allowed=True)


class PaginationResponse(BaseModel):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏"""
    page: int = Field(..., description="–¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞")
    limit: int = Field(..., description="–≠–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ")
    total: int = Field(..., description="–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
    pages: int = Field(..., description="–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü")
    has_next: bool = Field(..., description="–ï—Å—Ç—å –ª–∏ —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞")
    has_prev: bool = Field(..., description="–ï—Å—Ç—å –ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞")


class ErrorResponse(BaseModel):
    """–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç —Å –æ—à–∏–±–∫–æ–π"""
    error: bool = Field(True, description="–§–ª–∞–≥ –æ—à–∏–±–∫–∏")
    message: str = Field(..., description="–°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ")
    error_code: Optional[str] = Field(None, description="–ö–æ–¥ –æ—à–∏–±–∫–∏")
    details: Optional[Dict[str, Any]] = Field(None, description="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ—Ç–∞–ª–∏")
    timestamp: datetime = Field(..., description="–í—Ä–µ–º—è –æ—à–∏–±–∫–∏")
    path: str = Field(..., description="–ü—É—Ç—å –∑–∞–ø—Ä–æ—Å–∞")


class SuccessResponse(BaseModel):
    """–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç"""
    success: bool = Field(True, description="–§–ª–∞–≥ —É—Å–ø–µ—Ö–∞")
    message: str = Field(..., description="–°–æ–æ–±—â–µ–Ω–∏–µ")
    data: Optional[Dict[str, Any]] = Field(None, description="–î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞")
    timestamp: datetime = Field(..., description="–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞")


# === –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò ===

class UserResponse(BaseResponse):
    """–û—Ç–≤–µ—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    id: UUID = Field(..., description="–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä")
    wallet_address: str = Field(..., description="–ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞")
    username: Optional[str] = Field(None, description="–ù–∏–∫–Ω–µ–π–º")
    email: Optional[str] = Field(None, description="Email (—Å–∫—Ä—ã—Ç –¥–ª—è –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)")
    
    # –ü—Ä–æ—Ñ–∏–ª—å
    avatar_url: Optional[str] = Field(None, description="URL –∞–≤–∞—Ç–∞—Ä–∞")
    bio: Optional[str] = Field(None, description="–ë–∏–æ–≥—Ä–∞—Ñ–∏—è")
    website: Optional[str] = Field(None, description="–°–∞–π—Ç")
    twitter_handle: Optional[str] = Field(None, description="Twitter")
    telegram_handle: Optional[str] = Field(None, description="Telegram")
    
    # –°—Ç–∞—Ç—É—Å –∏ —Ä–æ–ª—å
    role: UserRole = Field(..., description="–†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    status: UserStatus = Field(..., description="–°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    is_verified: bool = Field(..., description="–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –ª–∏")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    tokens_created: int = Field(..., description="–°–æ–∑–¥–∞–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤")
    total_volume_traded: Decimal = Field(..., description="–û–±—â–∏–π –æ–±—ä–µ–º —Ç–æ—Ä–≥–æ–≤")
    total_trades: int = Field(..., description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–¥–µ–ª–æ–∫")
    
    # –†–µ–π—Ç–∏–Ω–≥–∏
    reputation_score: float = Field(..., description="–†–µ–ø—É—Ç–∞—Ü–∏—è (0-100)")
    creator_rating: float = Field(..., description="–†–µ–π—Ç–∏–Ω–≥ —Å–æ–∑–¥–∞—Ç–µ–ª—è (0-5)")
    trader_rating: float = Field(..., description="–†–µ–π—Ç–∏–Ω–≥ —Ç—Ä–µ–π–¥–µ—Ä–∞ (0-5)")
    win_rate: float = Field(..., description="–ü—Ä–æ—Ü–µ–Ω—Ç –≤—ã–∏–≥—Ä—ã—à–Ω—ã—Ö —Å–¥–µ–ª–æ–∫")
    
    # –í—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏
    created_at: datetime = Field(..., description="–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
    last_login_at: Optional[datetime] = Field(None, description="–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤—Ö–æ–¥")
    
    
class UserProfileResponse(UserResponse):
    """–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    profitable_trades: int = Field(..., description="–ü—Ä–∏–±—ã–ª—å–Ω—ã–µ —Å–¥–µ–ª–∫–∏")
    kyc_completed: bool = Field(..., description="–ü—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ KYC")
    warning_count: int = Field(..., description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π")
    
    # –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    last_trade_at: Optional[datetime] = Field(None, description="–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–¥–µ–ª–∫–∞")
    last_token_creation_at: Optional[datetime] = Field(None, description="–ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞")


class UsersListResponse(BaseResponse):
    """–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    users: List[UserResponse] = Field(..., description="–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    pagination: PaginationResponse = Field(..., description="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏")


# === –¢–û–ö–ï–ù–´ ===

class BondingCurveResponse(BaseResponse):
    """–î–∞–Ω–Ω—ã–µ –±–æ–Ω–¥–∏–Ω–≥-–∫—Ä–∏–≤–æ–π"""
    curve_type: CurveType = Field(..., description="–¢–∏–ø –∫—Ä–∏–≤–æ–π")
    initial_price: Decimal = Field(..., description="–ù–∞—á–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞")
    current_price: Decimal = Field(..., description="–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞")
    initial_supply: Decimal = Field(..., description="–ù–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ")
    current_supply: Decimal = Field(..., description="–¢–µ–∫—É—â–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ")
    graduation_threshold: Decimal = Field(..., description="–ü–æ—Ä–æ–≥ –¥–ª—è –ª–∏—Å—Ç–∏–Ω–≥–∞")
    progress_to_graduation: float = Field(..., description="–ü—Ä–æ–≥—Ä–µ—Å—Å –¥–æ –ª–∏—Å—Ç–∏–Ω–≥–∞ (0-1)")


class TokenResponse(BaseResponse):
    """–û—Ç–≤–µ—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ —Ç–æ–∫–µ–Ω–∞"""
    id: UUID = Field(..., description="–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä")
    mint_address: str = Field(..., description="Mint –∞–¥—Ä–µ—Å –≤ Solana")
    name: str = Field(..., description="–ù–∞–∑–≤–∞–Ω–∏–µ")
    symbol: str = Field(..., description="–°–∏–º–≤–æ–ª")
    description: Optional[str] = Field(None, description="–û–ø–∏—Å–∞–Ω–∏–µ")
    image_url: Optional[str] = Field(None, description="URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
    
    # –°–æ–∑–¥–∞—Ç–µ–ª—å
    creator_id: UUID = Field(..., description="ID —Å–æ–∑–¥–∞—Ç–µ–ª—è")
    creator: UserResponse = Field(..., description="–î–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞—Ç–µ–ª—è")
    
    # –†—ã–Ω–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    market_cap: Decimal = Field(..., description="–†—ã–Ω–æ—á–Ω–∞—è –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è")
    current_price: Decimal = Field(..., description="–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞")
    price_change_24h: Optional[float] = Field(None, description="–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã –∑–∞ 24—á (%)")
    
    # –†–µ–∑–µ—Ä–≤—ã
    sol_reserves: Decimal = Field(..., description="–†–µ–∑–µ—Ä–≤—ã SOL")
    token_reserves: Decimal = Field(..., description="–†–µ–∑–µ—Ä–≤—ã —Ç–æ–∫–µ–Ω–æ–≤")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    volume_24h: Decimal = Field(..., description="–û–±—ä–µ–º –∑–∞ 24 —á–∞—Å–∞")
    volume_total: Decimal = Field(..., description="–û–±—â–∏–π –æ–±—ä–µ–º")
    trade_count: int = Field(..., description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–¥–µ–ª–æ–∫")
    holder_count: int = Field(..., description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ä–∂–∞—Ç–µ–ª–µ–π")
    
    # –°—Ç–∞—Ç—É—Å
    status: TokenStatus = Field(..., description="–°—Ç–∞—Ç—É—Å —Ç–æ–∫–µ–Ω–∞")
    is_graduated: bool = Field(..., description="–õ–∏—Å—Ç–∏–Ω–≥–æ–≤–∞–Ω –ª–∏ –Ω–∞ DEX")
    is_verified: bool = Field(..., description="–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –ª–∏")
    
    # –ë–æ–Ω–¥–∏–Ω–≥-–∫—Ä–∏–≤–∞—è
    bonding_curve: BondingCurveResponse = Field(..., description="–î–∞–Ω–Ω—ã–µ –±–æ–Ω–¥–∏–Ω–≥-–∫—Ä–∏–≤–æ–π")
    
    # –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏
    telegram_url: Optional[str] = Field(None, description="Telegram")
    twitter_url: Optional[str] = Field(None, description="Twitter")
    website_url: Optional[str] = Field(None, description="–°–∞–π—Ç")
    
    # –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
    security_score: float = Field(..., description="–û—Ü–µ–Ω–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
    rug_pull_risk: float = Field(..., description="–†–∏—Å–∫ rug pull")
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ
    tags: List[str] = Field(..., description="–¢–µ–≥–∏")
    created_at: datetime = Field(..., description="–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è")


class TokenDetailResponse(TokenResponse):
    """–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–∫–µ–Ω–µ"""
    # –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    all_time_high_price: Optional[Decimal] = Field(None, description="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞")
    all_time_high_mc: Optional[Decimal] = Field(None, description="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è")
    unique_traders: int = Field(..., description="–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ç—Ä–µ–π–¥–µ—Ä–æ–≤")
    trades_24h: int = Field(..., description="–°–¥–µ–ª–∫–∏ –∑–∞ 24 —á–∞—Å–∞")
    
    # –ì—Ä–∞–¥–∞—Ü–∏—è
    graduated_at: Optional[datetime] = Field(None, description="–í—Ä–µ–º—è –ª–∏—Å—Ç–∏–Ω–≥–∞ –Ω–∞ DEX")
    graduation_dex: Optional[DexType] = Field(None, description="DEX –ª–∏—Å—Ç–∏–Ω–≥–∞")
    
    # –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    metadata_uri: Optional[str] = Field(None, description="URI –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö")
    liquidity_locked: bool = Field(..., description="–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –ª–∏ –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å")


class TokensListResponse(BaseResponse):
    """–°–ø–∏—Å–æ–∫ —Ç–æ–∫–µ–Ω–æ–≤ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    tokens: List[TokenResponse] = Field(..., description="–°–ø–∏—Å–æ–∫ —Ç–æ–∫–µ–Ω–æ–≤")
    pagination: PaginationResponse = Field(..., description="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏")


class TokenCreateResponse(BaseResponse):
    """–û—Ç–≤–µ—Ç –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞"""
    token: TokenResponse = Field(..., description="–°–æ–∑–¥–∞–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω")
    transaction_signature: str = Field(..., description="–ü–æ–¥–ø–∏—Å—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏")
    estimated_confirmation_time: int = Field(..., description="–û–∂–∏–¥–∞–µ–º–æ–µ –≤—Ä–µ–º—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è (—Å–µ–∫)")


# === –¢–û–†–ì–û–í–õ–Ø ===

class TradeResponse(BaseResponse):
    """–û—Ç–≤–µ—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ —Å–¥–µ–ª–∫–∏"""
    id: UUID = Field(..., description="ID —Å–¥–µ–ª–∫–∏")
    transaction_signature: str = Field(..., description="–ü–æ–¥–ø–∏—Å—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏")
    
    # –£—á–∞—Å—Ç–Ω–∏–∫–∏
    user_id: UUID = Field(..., description="ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    token_id: UUID = Field(..., description="ID —Ç–æ–∫–µ–Ω–∞")
    token: TokenResponse = Field(..., description="–î–∞–Ω–Ω—ã–µ —Ç–æ–∫–µ–Ω–∞")
    
    # –î–µ—Ç–∞–ª–∏ —Å–¥–µ–ª–∫–∏
    trade_type: TradeType = Field(..., description="–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏")
    sol_amount: Decimal = Field(..., description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ SOL")
    token_amount: Decimal = Field(..., description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤")
    price_per_token: Decimal = Field(..., description="–¶–µ–Ω–∞ –∑–∞ —Ç–æ–∫–µ–Ω")
    
    # Slippage
    expected_amount: Optional[Decimal] = Field(None, description="–û–∂–∏–¥–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ")
    actual_slippage: Optional[float] = Field(None, description="–§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π slippage")
    max_slippage: Optional[float] = Field(None, description="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π slippage")
    
    # –ö–æ–º–∏—Å—Å–∏–∏
    platform_fee: Optional[Decimal] = Field(None, description="–ö–æ–º–∏—Å—Å–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã")
    
    # –í–ª–∏—è–Ω–∏–µ –Ω–∞ —Ä—ã–Ω–æ–∫
    price_impact: Optional[float] = Field(None, description="–í–ª–∏—è–Ω–∏–µ –Ω–∞ —Ü–µ–Ω—É")
    market_cap_before: Optional[Decimal] = Field(None, description="–ö–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ")
    market_cap_after: Optional[Decimal] = Field(None, description="–ö–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ—Å–ª–µ")
    
    # –°—Ç–∞—Ç—É—Å
    is_successful: bool = Field(..., description="–£—Å–ø–µ—à–Ω–∞—è –ª–∏ —Å–¥–µ–ª–∫–∞")
    error_message: Optional[str] = Field(None, description="–°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ")
    
    # –í—Ä–µ–º—è
    created_at: datetime = Field(..., description="–í—Ä–µ–º—è —Å–¥–µ–ª–∫–∏")


class TradeEstimateResponse(BaseResponse):
    """–û—Ü–µ–Ω–∫–∞ —Ç–æ—Ä–≥–æ–≤–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏"""
    expected_output: Decimal = Field(..., description="–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
    price_impact: float = Field(..., description="–í–ª–∏—è–Ω–∏–µ –Ω–∞ —Ü–µ–Ω—É (%)")
    estimated_slippage: float = Field(..., description="–û–∂–∏–¥–∞–µ–º—ã–π slippage (%)")
    platform_fee: Decimal = Field(..., description="–ö–æ–º–∏—Å—Å–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã")
    minimum_output: Decimal = Field(..., description="–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
    price_per_token: Decimal = Field(..., description="–¶–µ–Ω–∞ –∑–∞ —Ç–æ–∫–µ–Ω")
    market_cap_after: Decimal = Field(..., description="–ö–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ—Å–ª–µ —Å–¥–µ–ª–∫–∏")


class TradesListResponse(BaseResponse):
    """–°–ø–∏—Å–æ–∫ —Å–¥–µ–ª–æ–∫ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    trades: List[TradeResponse] = Field(..., description="–°–ø–∏—Å–æ–∫ —Å–¥–µ–ª–æ–∫")
    pagination: PaginationResponse = Field(..., description="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏")


class UserPortfolioResponse(BaseResponse):
    """–ü–æ—Ä—Ç—Ñ–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_id: UUID = Field(..., description="ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    total_value_sol: Decimal = Field(..., description="–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ SOL")
    total_value_usd: Optional[Decimal] = Field(None, description="–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ USD")
    total_pnl: Decimal = Field(..., description="–û–±—â–∏–π P&L")
    total_pnl_percent: float = Field(..., description="–û–±—â–∏–π P&L –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö")
    
    positions: List[Dict[str, Any]] = Field(..., description="–ü–æ–∑–∏—Ü–∏–∏ –ø–æ —Ç–æ–∫–µ–Ω–∞–º")


# === –ê–ù–ê–õ–ò–¢–ò–ö–ê ===

class PricePointResponse(BaseResponse):
    """–¢–æ—á–∫–∞ —Ü–µ–Ω—ã –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞"""
    timestamp: datetime = Field(..., description="–í—Ä–µ–º—è")
    open_price: Decimal = Field(..., description="–¶–µ–Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è")
    high_price: Decimal = Field(..., description="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞")
    low_price: Decimal = Field(..., description="–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞")
    close_price: Decimal = Field(..., description="–¶–µ–Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏—è")
    volume_sol: Decimal = Field(..., description="–û–±—ä–µ–º –≤ SOL")
    volume_tokens: Decimal = Field(..., description="–û–±—ä–µ–º –≤ —Ç–æ–∫–µ–Ω–∞—Ö")
    trade_count: int = Field(..., description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–¥–µ–ª–æ–∫")
    market_cap: Optional[Decimal] = Field(None, description="–†—ã–Ω–æ—á–Ω–∞—è –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è")


class PriceHistoryResponse(BaseResponse):
    """–ò—Å—Ç–æ—Ä–∏—è —Ü–µ–Ω —Ç–æ–∫–µ–Ω–∞"""
    token_address: str = Field(..., description="–ê–¥—Ä–µ—Å —Ç–æ–∫–µ–Ω–∞")
    interval_minutes: int = Field(..., description="–ò–Ω—Ç–µ—Ä–≤–∞–ª –≤ –º–∏–Ω—É—Ç–∞—Ö")
    data: List[PricePointResponse] = Field(..., description="–î–∞–Ω–Ω—ã–µ —Ü–µ–Ω")
    summary: Dict[str, Any] = Field(..., description="–°–≤–æ–¥–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")


class MarketStatsResponse(BaseResponse):
    """–†—ã–Ω–æ—á–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"""
    total_tokens: int = Field(..., description="–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤")
    active_tokens: int = Field(..., description="–ê–∫—Ç–∏–≤–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã")
    graduated_tokens: int = Field(..., description="–¢–æ–∫–µ–Ω—ã –Ω–∞ DEX")
    
    total_volume_24h: Decimal = Field(..., description="–û–±—â–∏–π –æ–±—ä–µ–º –∑–∞ 24—á")
    total_trades_24h: int = Field(..., description="–°–¥–µ–ª–∫–∏ –∑–∞ 24—á")
    total_users: int = Field(..., description="–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    active_users_24h: int = Field(..., description="–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∑–∞ 24—á")
    
    total_market_cap: Decimal = Field(..., description="–û–±—â–∞—è –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è")
    platform_fees_24h: Decimal = Field(..., description="–ö–æ–º–∏—Å—Å–∏–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –∑–∞ 24—á")
    
    top_tokens_by_volume: List[TokenResponse] = Field(..., description="–¢–æ–ø —Ç–æ–∫–µ–Ω–æ–≤ –ø–æ –æ–±—ä–µ–º—É")
    top_tokens_by_market_cap: List[TokenResponse] = Field(..., description="–¢–æ–ø —Ç–æ–∫–µ–Ω–æ–≤ –ø–æ –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–∏")


class TrendingTokensResponse(BaseResponse):
    """–¢—Ä–µ–Ω–¥–∏–Ω–≥–æ–≤—ã–µ —Ç–æ–∫–µ–Ω—ã"""
    trending_by_volume: List[TokenResponse] = Field(..., description="–¢–æ–ø –ø–æ –æ–±—ä–µ–º—É")
    trending_by_trades: List[TokenResponse] = Field(..., description="–¢–æ–ø –ø–æ —Å–¥–µ–ª–∫–∞–º")
    trending_by_holders: List[TokenResponse] = Field(..., description="–¢–æ–ø –ø–æ –¥–µ—Ä–∂–∞—Ç–µ–ª—è–º")
    new_tokens: List[TokenResponse] = Field(..., description="–ù–æ–≤—ã–µ —Ç–æ–∫–µ–Ω—ã")
    recently_graduated: List[TokenResponse] = Field(..., description="–ù–µ–¥–∞–≤–Ω–æ –≤—ã–ø—É—â–µ–Ω–Ω—ã–µ –Ω–∞ DEX")


# === –°–ò–°–¢–ï–ú–ê ===

class HealthCheckResponse(BaseResponse):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã"""
    status: str = Field(..., description="–û–±—â–∏–π —Å—Ç–∞—Ç—É—Å (healthy/degraded/unhealthy)")
    timestamp: datetime = Field(..., description="–í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏")
    services: Dict[str, str] = Field(..., description="–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤")
    version: str = Field(..., description="–í–µ—Ä—Å–∏—è API")
    uptime: str = Field(..., description="–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã")


class MetricsResponse(BaseResponse):
    """–ú–µ—Ç—Ä–∏–∫–∏ —Å–∏—Å—Ç–µ–º—ã"""
    api_requests_total: int = Field(..., description="–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤")
    api_requests_per_minute: float = Field(..., description="–ó–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É")
    active_connections: int = Field(..., description="–ê–∫—Ç–∏–≤–Ω—ã–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è")
    database_connections: int = Field(..., description="–°–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ë–î")
    redis_connections: int = Field(..., description="–°–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Redis")
    memory_usage_mb: float = Field(..., description="–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏ (–ú–ë)")
    cpu_usage_percent: float = Field(..., description="–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ CPU (%)")


class WebSocketEventResponse(BaseResponse):
    """WebSocket —Å–æ–±—ã—Ç–∏–µ"""
    event_type: str = Field(..., description="–¢–∏–ø —Å–æ–±—ã—Ç–∏—è")
    data: Dict[str, Any] = Field(..., description="–î–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è")
    timestamp: datetime = Field(..., description="–í—Ä–µ–º—è —Å–æ–±—ã—Ç–∏—è")
    token_address: Optional[str] = Field(None, description="–ê–¥—Ä–µ—Å —Ç–æ–∫–µ–Ω–∞ (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ)")
    user_id: Optional[UUID] = Field(None, description="ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ)")


# === BATCH –û–¢–í–ï–¢–´ ===

class BatchOperationResponse(BaseResponse):
    """–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–∞–∫–µ—Ç–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏"""
    total_operations: int = Field(..., description="–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞—Ü–∏–π")
    successful_operations: int = Field(..., description="–£—Å–ø–µ—à–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏")
    failed_operations: int = Field(..., description="–ù–µ—É–¥–∞—á–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏")
    results: List[Dict[str, Any]] = Field(..., description="–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–ø–µ—Ä–∞—Ü–∏–π")
    errors: List[Dict[str, Any]] = Field(..., description="–û—à–∏–±–∫–∏")


class BatchTradeResponse(BatchOperationResponse):
    """–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–∞–∫–µ—Ç–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏"""
    total_volume: Decimal = Field(..., description="–û–±—â–∏–π –æ–±—ä–µ–º —Ç–æ—Ä–≥–æ–≤")
    total_fees: Decimal = Field(..., description="–û–±—â–∏–µ –∫–æ–º–∏—Å—Å–∏–∏")
    successful_trades: List[TradeResponse] = Field(..., description="–£—Å–ø–µ—à–Ω—ã–µ —Å–¥–µ–ª–∫–∏")


# === –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–ò–í–ù–´–ï –û–¢–í–ï–¢–´ ===

class AdminStatsResponse(BaseResponse):
    """–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"""
    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    total_users: int = Field(..., description="–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    verified_users: int = Field(..., description="–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏")
    banned_users: int = Field(..., description="–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏")
    
    # –¢–æ–∫–µ–Ω—ã
    total_tokens: int = Field(..., description="–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤")
    flagged_tokens: int = Field(..., description="–ü–æ–º–µ—á–µ–Ω–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã")
    verified_tokens: int = Field(..., description="–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã")
    
    # –§–∏–Ω–∞–Ω—Å—ã
    total_volume: Decimal = Field(..., description="–û–±—â–∏–π –æ–±—ä–µ–º —Ç–æ—Ä–≥–æ–≤")
    platform_revenue: Decimal = Field(..., description="–î–æ—Ö–æ–¥—ã –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã")
    
    # –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞ –ø–µ—Ä–∏–æ–¥
    new_users_24h: int = Field(..., description="–ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∑–∞ 24—á")
    new_tokens_24h: int = Field(..., description="–ù–æ–≤—ã–µ —Ç–æ–∫–µ–Ω—ã –∑–∞ 24—á")
    volume_24h: Decimal = Field(..., description="–û–±—ä–µ–º –∑–∞ 24—á")


class PlatformConfigResponse(BaseResponse):
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã"""
    trading_paused: bool = Field(..., description="–¢–æ—Ä–≥–æ–≤–ª—è –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    max_trade_size_sol: Decimal = Field(..., description="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Å–¥–µ–ª–∫–∏")
    platform_fee_percent: float = Field(..., description="–ö–æ–º–∏—Å—Å–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã")
    max_slippage_percent: float = Field(..., description="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π slippage")
    rate_limit_requests: int = Field(..., description="–õ–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤")
    rate_limit_window: int = Field(..., description="–û–∫–Ω–æ –ª–∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    version: str = Field(..., description="–í–µ—Ä—Å–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
    last_updated: datetime = Field(..., description="–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ")


# === –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –û–¢–í–ï–¢–´ ===

class SearchResponse(BaseResponse):
    """–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞"""
    query: str = Field(..., description="–ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å")
    total_results: int = Field(..., description="–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
    tokens: List[TokenResponse] = Field(..., description="–ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã")
    users: List[UserResponse] = Field(..., description="–ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏")
    execution_time_ms: float = Field(..., description="–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞")


class NotificationResponse(BaseResponse):
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"""
    id: UUID = Field(..., description="ID —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
    user_id: UUID = Field(..., description="ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    type: str = Field(..., description="–¢–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
    title: str = Field(..., description="–ó–∞–≥–æ–ª–æ–≤–æ–∫")
    message: str = Field(..., description="–°–æ–æ–±—â–µ–Ω–∏–µ")
    data: Optional[Dict[str, Any]] = Field(None, description="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
    is_read: bool = Field(..., description="–ü—Ä–æ—á–∏—Ç–∞–Ω–æ –ª–∏")
    created_at: datetime = Field(..., description="–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è")


class ApiInfoResponse(BaseResponse):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± API"""
    name: str = Field(..., description="–ù–∞–∑–≤–∞–Ω–∏–µ API")
    version: str = Field(..., description="–í–µ—Ä—Å–∏—è")
    description: str = Field(..., description="–û–ø–∏—Å–∞–Ω–∏–µ")
    documentation_url: str = Field(..., description="URL –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏")
    support_email: str = Field(..., description="Email –ø–æ–¥–¥–µ—Ä–∂–∫–∏")
    rate_limits: Dict[str, Any] = Field(..., description="–õ–∏–º–∏—Ç—ã API")
    features: List[str] = Field(..., description="–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏")


# === –û–¢–°–£–¢–°–¢–í–£–Æ–©–ò–ï –°–•–ï–ú–´ –ò–ó –ê–£–î–ò–¢–ê ===

class AuthTokenResponse(BaseResponse):
    """–û—Ç–≤–µ—Ç —Å —Ç–æ–∫–µ–Ω–æ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    access_token: str = Field(..., description="JWT —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞")
    token_type: str = Field(default="Bearer", description="–¢–∏–ø —Ç–æ–∫–µ–Ω–∞")
    expires_in: int = Field(..., description="–í—Ä–µ–º—è –∂–∏–∑–Ω–∏ —Ç–æ–∫–µ–Ω–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö")
    user: UserResponse = Field(..., description="–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

class UserStatsResponse(BaseResponse):
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    total_trades: int = Field(..., description="–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–¥–µ–ª–æ–∫")
    total_volume: Decimal = Field(..., description="–û–±—â–∏–π –æ–±—ä–µ–º —Ç–æ—Ä–≥–æ–≤")
    tokens_created: int = Field(..., description="–°–æ–∑–¥–∞–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤")
    portfolio_value: Decimal = Field(..., description="–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—è")
    pnl_24h: Decimal = Field(..., description="PnL –∑–∞ 24 —á–∞—Å–∞")

class UserTokensResponse(BaseResponse):
    """–¢–æ–∫–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    tokens: List[TokenResponse] = Field(..., description="–°–ø–∏—Å–æ–∫ —Ç–æ–∫–µ–Ω–æ–≤")
    total_count: int = Field(..., description="–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ")
    total_value: Decimal = Field(..., description="–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å")

class UserTradesResponse(BaseResponse):
    """–°–¥–µ–ª–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    trades: List[TradeResponse] = Field(..., description="–°–ø–∏—Å–æ–∫ —Å–¥–µ–ª–æ–∫")
    pagination: PaginationResponse = Field(..., description="–ü–∞–≥–∏–Ω–∞—Ü–∏—è")

class AdminDashboardResponse(BaseResponse):
    """–î–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏"""
    total_users: int = Field(..., description="–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    total_tokens: int = Field(..., description="–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤")
    total_volume_24h: Decimal = Field(..., description="–û–±—ä–µ–º –∑–∞ 24 —á–∞—Å–∞")
    active_users_24h: int = Field(..., description="–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∑–∞ 24 —á–∞—Å–∞")
    platform_fees_24h: Decimal = Field(..., description="–ö–æ–º–∏—Å—Å–∏–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –∑–∞ 24 —á–∞—Å–∞")

class SystemHealthResponse(BaseResponse):
    """–ó–¥–æ—Ä–æ–≤—å–µ —Å–∏—Å—Ç–µ–º—ã"""
    status: str = Field(..., description="–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã")
    database_status: str = Field(..., description="–°—Ç–∞—Ç—É—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    blockchain_status: str = Field(..., description="–°—Ç–∞—Ç—É—Å –±–ª–æ–∫—á–µ–π–Ω–∞")
    cache_status: str = Field(..., description="–°—Ç–∞—Ç—É—Å –∫—ç—à–∞")
    uptime: int = Field(..., description="–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –≤ —Å–µ–∫—É–Ω–¥–∞—Ö")

class AdminUserResponse(UserResponse):
    """–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∞–¥–º–∏–Ω–æ–≤"""
    email: str = Field(..., description="Email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    ip_address: Optional[str] = Field(None, description="IP –∞–¥—Ä–µ—Å")
    warning_count: int = Field(..., description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π")
    last_login_ip: Optional[str] = Field(None, description="IP –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–¥–∞")

class AdminTokenResponse(TokenResponse):
    """–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤"""
    security_flags: List[str] = Field(..., description="–§–ª–∞–≥–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
    reported_count: int = Field(..., description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∞–ª–æ–±")
    admin_notes: Optional[str] = Field(None, description="–ó–∞–º–µ—Ç–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")

class AdminTradeResponse(TradeResponse):
    """–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–¥–µ–ª–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤"""
    ip_address: Optional[str] = Field(None, description="IP –∞–¥—Ä–µ—Å —Ç—Ä–µ–π–¥–µ—Ä–∞")
    risk_score: float = Field(..., description="–û—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–∞")
    flags: List[str] = Field(..., description="–§–ª–∞–≥–∏ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")

class SecurityLogResponse(BaseResponse):
    """–ó–∞–ø–∏—Å—å –≤ –ª–æ–≥–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"""
    id: UUID = Field(..., description="ID –∑–∞–ø–∏—Å–∏")
    event_type: str = Field(..., description="–¢–∏–ø —Å–æ–±—ã—Ç–∏—è")
    severity: str = Field(..., description="–°–µ—Ä—å–µ–∑–Ω–æ—Å—Ç—å")
    user_id: Optional[UUID] = Field(None, description="ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    ip_address: Optional[str] = Field(None, description="IP –∞–¥—Ä–µ—Å")
    details: Dict[str, Any] = Field(..., description="–î–µ—Ç–∞–ª–∏ —Å–æ–±—ã—Ç–∏—è")
    created_at: datetime = Field(..., description="–í—Ä–µ–º—è —Å–æ–±—ã—Ç–∏—è")